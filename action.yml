name: 'Docker Add Release Tag'
description: 'Github action to add a release tag to a Docker image'
inputs:
  aws-access-key-id:
    description: 'The AWS access key ID to use for pushing the image'
    required: true
  aws-secret-access-key:
    description: 'The AWS secret access key to use for pushing the image'
    required: true
  aws-region:
    description: 'The AWS region that holds the ECR repository'
    required: true
  ecr-repository:
    description: 'The name of the ECR repository'
    required: true
runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Get the SHA_SHORT
      shell: bash
      run: echo "GITHUB_SHA_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Get the VERSION
      shell: bash
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Push Release Tag
      shell: bash
      run: |
        export MANIFEST=$(aws ecr batch-get-image --repository-name ${{ inputs.ecr-repository }} --image-ids imageTag=sha-${{ env.GITHUB_SHA_SHORT }} --query 'images[].imageManifest' --output text)
        aws ecr put-image --repository-name ${{ inputs.ecr-repository }} --image-tag ${{ env.VERSION }} --image-manifest "$MANIFEST"
        aws ecr put-image --repository-name ${{ inputs.ecr-repository }} --image-tag latest --image-manifest "$MANIFEST"
